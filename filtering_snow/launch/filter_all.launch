<?xml version="1.0"?>

<launch>
  <!-- Run box filter to remove car points -->
  <!-- <node pkg="filtering_snow" type="cropBoxFilter" name="cropbox" output="screen"/>
    <param name="/cropbox/inputTopic" value="/velodyne_points" type="string" />
    <rosparam param="/cropbox/maxvector">[2.5, 0.935, 0]</rosparam>
    <rosparam param="/cropbox/minvector">[-2.5, -0.935, -1.480]</rosparam>
    <param name="/cropbox/setNegative" value="true" type="bool" />
    <param name="/cropbox/outputNoPoints" value="false" type="bool" /> -->
      <!-- minvector = [minX, minY, minZ] -->

  <!-- Run radius outlier removal filter
         - set the radius to search around each point
         - set the min. no. of neighbours to be within the search radius for the point to be included -->
  <node pkg="filtering_snow" type="radiusOutlierFilter" name="radius_outlier_filter" output="screen"/>
    <param name="/radius/inputTopic" value="/velodyne_points" type="string" />
    <param name="/radius/radius_search" value="0.05" type="double" />
    <param name="/radius/minNeighbours" value="3" type="int" />

  <!-- Run dynamic radius outlier removal filter
        - set the min. no. of neighbours to be within the search radius for the point to be included
        - Set the radius search multiplier (i.e. radius_search = radius_multiplier * azAngle * range)
        - Set the azimuth angle of the lidar (in degrees, for VLP16 - 0.4)
        - Set the minimum search radius (default 0) This stops all the close points from being removed
        - Note: you need to specify a search radius because the dynamic search radius
                only works for PointCloud2 right now. If PointCloud is used, it
                will use the specified static search range-->

  <node pkg="filtering_snow" type="dynamicRadiusOutlierFilter" name="dynamic_radius_outlier_filter" output="screen"/>
    <param name="/radiusDynamic/radius_search" value="0.8" type="double" />
    <param name="/radiusDynamic/inputTopic" value="/velodyne_points" type="string" />
    <param name="/radiusDynamic/min_Neighbours" value="3" type="int" />
    <param name="/radiusDynamic/radius_multiplier" value="3" type="double" />
    <param name="/radiusDynamic/azimuth_angle" value="0.16" type="double" />
    <param name="/radiusDynamic/min_search_radius" value="0.04" type="double" />

  <!-- Run statistical outlier removal filter
        - set the amount of neighbours to be analyzed for each point
        - set the standard deviation multiplier for the thresholding-->
  <node pkg="filtering_snow" type="statsOutlierFilter" name="statistical_outlier_filter" output="screen"/>
    <param name="/stats/inputTopic" value="/velodyne_points" type="string" />
    <param name="/stats/meanK" value="50" type="double" />
    <param name="/stats/stdDev" value="0.3" type="double" />

  <!-- Run voxel grid filter -->
    <node pkg="filtering_snow" type="voxelGridFilter" name="voxel_grid_filter" output="screen"/>
      <param name="/voxel/inputTopic" value="/velodyne_points" type="string" />
      <rosparam param="/voxel/leafSize">[0.2, 0.2, 0.2]</rosparam>

  <!-- Run rviz -->
    <node name="rviz1" pkg="rviz" type="rviz" args="-d $(find filtering_snow)/config/rviz_config.rviz" />

</launch>
